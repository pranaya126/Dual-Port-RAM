module dram(input wire clk,input wire [3:0]addr_a,input wire [3:0]addr_b,input wire [3:0]data_in_a,input wire [3:0]data_in_b,input wire we_a,input wire we_b,output reg [3:0]data_out_a,output reg [3:0]data_out_b);
reg [3:0]mem[15:0]; 
always@(posedge clk) begin
if(we_a) begin
mem[addr_a]<=data_in_a;
end
else begin
data_out_a<=mem[addr_a]; 
end
if(we_b) begin
mem[addr_b]<=data_in_b;
end
else begin
data_out_b<=mem[addr_b];
 end end
endmodule
